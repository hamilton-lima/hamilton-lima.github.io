<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>nodejs on Hamilton Lima</title><link>https://hamilton-lima.github.io/tags/nodejs/</link><description>Recent content in nodejs on Hamilton Lima</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 26 Oct 2016 23:00:17 +0000</lastBuildDate><atom:link href="https://hamilton-lima.github.io/tags/nodejs/index.xml" rel="self" type="application/rss+xml"/><item><title>Vanhackton - Lessons Learned</title><link>https://hamilton-lima.github.io/posts/vanhackton-lessons-learned/</link><pubDate>Wed, 26 Oct 2016 23:00:17 +0000</pubDate><guid>https://hamilton-lima.github.io/posts/vanhackton-lessons-learned/</guid><description>After a very intense weekend I feel like coming from the battle :) But it feels very good to deliver a good result in such a small timeframe. On this post I will describe some lessons learned from the past weekend and some decisions I made that worth.
POC - the start For every project, I allways plan for proof of concepts, small implementations that isolate the implementation complexity by implementing just the necessary, to solve one problem.</description></item><item><title>Vanhackaton status 2</title><link>https://hamilton-lima.github.io/posts/vanhackaton-status-2/</link><pubDate>Sun, 23 Oct 2016 00:38:18 +0000</pubDate><guid>https://hamilton-lima.github.io/posts/vanhackaton-status-2/</guid><description>Today was a very productive day!! tons of nice features add to the editor:
Converted all the javascript code to run inside an Angular application Create the UI to edit the questions, with add and remove Created the timeline that shows each question position in the video Created backend using node.js and SQLLite Add inline edit to the story title and questions Scroll to the question when clicks on the timeline marker Monitor the execution of the video and pause for the question, tracking the answer in the edit mode Getting close to the first usable version!</description></item></channel></rss>