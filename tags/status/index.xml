<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Status on Hamilton Lima</title><link>https://hamiltonlima.com/tags/status/</link><description>Recent content in Status on Hamilton Lima</description><generator>Hugo</generator><language>en-us</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 23 Oct 2016 00:38:18 +0000</lastBuildDate><atom:link href="https://hamiltonlima.com/tags/status/index.xml" rel="self" type="application/rss+xml"/><item><title>Vanhackaton status 2</title><link>https://hamiltonlima.com/posts/vanhackaton-status-2/</link><pubDate>Sun, 23 Oct 2016 00:38:18 +0000</pubDate><guid>https://hamiltonlima.com/posts/vanhackaton-status-2/</guid><description>Today was a very productive day!! tons of nice features add to the editor:
Converted all the javascript code to run inside an Angular application Create the UI to edit the questions, with add and remove Created the timeline that shows each question position in the video Created backend using node.js and SQLLite Add inline edit to the story title and questions Scroll to the question when clicks on the timeline marker Monitor the execution of the video and pause for the question, tracking the answer in the edit mode Getting close to the first usable version!</description></item><item><title>Vanhackton status 1</title><link>https://hamiltonlima.com/posts/vanhackton-status-1/</link><pubDate>Sat, 22 Oct 2016 11:20:44 +0000</pubDate><guid>https://hamiltonlima.com/posts/vanhackton-status-1/</guid><description>First proof of concept is done! I choose the challenge to build and interactive video editor that will creae layers over existing videos, nice challenge btw :) Technical details that are in this status:
Load video player on the fly Add and remove questions layer over the video Pause and Play the video Forward the video x amount of seconds Monitor what is the current position of the video Now its time for next steps:</description></item></channel></rss>