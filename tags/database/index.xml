<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>database on Hamilton Lima</title><link>http://hamiltonlima.com/tags/database/</link><description>Recent content in database on Hamilton Lima</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 17 Oct 2016 19:58:24 +0000</lastBuildDate><atom:link href="http://hamiltonlima.com/tags/database/index.xml" rel="self" type="application/rss+xml"/><item><title>beepify.io, server side release 1 - part 2</title><link>http://hamiltonlima.com/posts/beepify-io-server-side-release-1-part-2/</link><pubDate>Mon, 17 Oct 2016 19:58:24 +0000</pubDate><guid>http://hamiltonlima.com/posts/beepify-io-server-side-release-1-part-2/</guid><description>The second part of the server side release 1 will describe some details about the implementation it self. please see the first part for configuration details.
Quick tips to a playframework application Of course there are tons of nice features that can be used, but for the sake of simplicity here are the concepts that I consider the most important ones for this implementation: Edit the file conf/routes to match the services urls and the implementation of it, as simple as: GET /mock controllers.</description></item><item><title>beepify.io, server side release 1 - part 1</title><link>http://hamiltonlima.com/posts/beepify-io-server-side-release-1-part1/</link><pubDate>Mon, 17 Oct 2016 19:10:05 +0000</pubDate><guid>http://hamiltonlima.com/posts/beepify-io-server-side-release-1-part1/</guid><description>These are the server side release 1 original plan, that is complete with some minor changes highlighted on each line
Install playframework environment - not in the original plan Create the models Read current location latitude, longitude Add sample data to the database - changed to use a service to create data instead of SQL to add data Create services Get data receive product code, latitude and longitude Return all prices It´s impressive how environment setup takes time, usually we forget to include this step when planning projects, but believe me this takes of time in a project, let´s go over each step I did on this implementation.</description></item></channel></rss>