<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>api on Hamilton Lima</title><link>https://hamiltonlima.com/tags/api/</link><description>Recent content in api on Hamilton Lima</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 07 Oct 2024 21:31:00 +0000</lastBuildDate><atom:link href="https://hamiltonlima.com/tags/api/index.xml" rel="self" type="application/rss+xml"/><item><title>Exploring NestJS: A Personal Journey and Key Insights</title><link>https://hamiltonlima.com/posts/exploring-nestjs-a-personal-journey-and-key-insights/</link><pubDate>Mon, 07 Oct 2024 21:31:00 +0000</pubDate><guid>https://hamiltonlima.com/posts/exploring-nestjs-a-personal-journey-and-key-insights/</guid><description>Time flies! It feels like just yesterday when Qi Chen introduced NestJS as our backend technology at Mindbeacon back in 2019. It was a perfect match for Angular—similar coding styles, dependency injection, plenty of decorators, and loads of CLI options. Today, NestJS (not to be confused with its cousin, Next.js) can do so much more: scheduling, support for RabbitMQ, Kafka, Redis, WebSockets, and the list goes on.
I might be a bit biased, having used it for the past five years, but sometimes it feels like I&amp;rsquo;ve not just used it—I&amp;rsquo;ve pushed it to its limits!</description></item></channel></rss>