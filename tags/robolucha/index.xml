<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>robolucha on Hamilton Lima</title><link>https://hamilton-lima.github.io/tags/robolucha/</link><description>Recent content in robolucha on Hamilton Lima</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 11 May 2018 01:01:24 +0000</lastBuildDate><atom:link href="https://hamilton-lima.github.io/tags/robolucha/index.xml" rel="self" type="application/rss+xml"/><item><title>Using Redis Publish and Subscribe</title><link>https://hamilton-lima.github.io/posts/using-redis-publish-and-subscribe/</link><pubDate>Fri, 11 May 2018 01:01:24 +0000</pubDate><guid>https://hamilton-lima.github.io/posts/using-redis-publish-and-subscribe/</guid><description>There is this game called Robolucha where you code your robots to fight in a virtual arena. I&amp;rsquo;ve been working on this project for some years and last year decided to rewrite everything, mainly for the sake of technical exploration and this post share challenges using Redis Publish and subscribe.
Proving the concept Before I start to hit the keyboard to refactor MatchStatePublisher to send match states to Redis, I had some homework to do.</description></item><item><title>From counters to promises a javascript journey</title><link>https://hamilton-lima.github.io/posts/from-counters-to-promises-a-javascript-journey/</link><pubDate>Tue, 28 Feb 2017 13:21:21 +0000</pubDate><guid>https://hamilton-lima.github.io/posts/from-counters-to-promises-a-javascript-journey/</guid><description>Beauty always promises, but never gives anything. Simone Weil
Unlike beauty, javascript promises are faithful, and will be fulfilled&amp;hellip; unless someone rejects it :) If you ever need to load images using javascript or did anything that needs to wait until something is done, you probably used a promise, maybe even without noticing. I see Promises as a nice way to simplify the callback hell, but don&amp;rsquo;t be fooled, the callbacks are still there, they are only organized in a more simpler way.</description></item><item><title>Increase Ant Hibernate Junit tests Performance by 80%</title><link>https://hamilton-lima.github.io/posts/increase-ant-hibernate-junit-tests-performance-by-80/</link><pubDate>Tue, 27 Dec 2016 20:52:25 +0000</pubDate><guid>https://hamilton-lima.github.io/posts/increase-ant-hibernate-junit-tests-performance-by-80/</guid><description>If don´t want to read everything, just set forkingmode=&amp;ldquo;once&amp;rdquo; to have huge improvement in your tests processing time. :)
Now the details&amp;hellip; I have several, around 100 junit tests in Robolucha project, most of then use Hibernate and are run by an ant script. When you start Java Virtual machine Hibernate prepares itself to connect to the database by checking the necessary tables and preparing all the internals needed to work, but this process takes some time, some seconds to say the true.</description></item><item><title>Holidays selfhackaton - the start</title><link>https://hamilton-lima.github.io/posts/holidays-selfhackaton-the-start/</link><pubDate>Mon, 26 Dec 2016 15:46:53 +0000</pubDate><guid>https://hamilton-lima.github.io/posts/holidays-selfhackaton-the-start/</guid><description>[caption id=&amp;ldquo;attachment_110&amp;rdquo; align=&amp;ldquo;alignnone&amp;rdquo; width=&amp;ldquo;800&amp;rdquo;]The selfhackaton plan![/caption] During this holidays celebration week, I will join myself in a hackaton! Me myself and I will code several new features to Robolucha. The image above shows the sprint meeting board, when my stakeholder, a.k.a. wife forced me to define priorities and a clear order of what to deliver during this week :) Translating the characters above for something more understandable, here is the list:</description></item><item><title>Robolucha mask editor</title><link>https://hamilton-lima.github.io/posts/robolucha-mask-editor/</link><pubDate>Mon, 21 Nov 2016 22:35:39 +0000</pubDate><guid>https://hamilton-lima.github.io/posts/robolucha-mask-editor/</guid><description>Today Robolucha was updated including the mask editor, where you can customize your luchador mask, and see it in the arena! You can change colors and forms for several different layers, give a try and show your creativity with new cool masks for your luchador. Try the new mask editor here: http://ring.robolucha.com If you don´t know robolucha, it is a fantastic game I created where you can code your &amp;ldquo;luchadores&amp;rdquo; using javascript and battle in an arena with your friends.</description></item><item><title>The birth of robolucha</title><link>https://hamilton-lima.github.io/posts/the-birth-of-robolucha/</link><pubDate>Thu, 03 Mar 2016 00:28:45 +0000</pubDate><guid>https://hamilton-lima.github.io/posts/the-birth-of-robolucha/</guid><description>Several years ago, on 2004, when I was a teacher the Unicarioca University, I used robocode to make the Java learning more interesting. That was fantastic, the students were able to move their objectives from the code to build a robot that could perform better than others.
[caption id=&amp;ldquo;attachment_7&amp;rdquo; align=&amp;ldquo;alignnone&amp;rdquo; width=&amp;ldquo;653&amp;rdquo;]me in the lab trolling one random student about his Java code.[/caption]
After everybody finished their coding, all robots packed as jar files were sent to the teacher, a.</description></item></channel></rss>